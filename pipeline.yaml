AWSTemplateFormatVersion: '2010-09-09'
Description: >
  CI/CD Pipeline for the FinPay Credit Service. This pipeline builds the SAM application
  and deploys it to dev, qa, and prod environments.

Parameters:
  GitHubOwner:
    Type: String
    Description: The owner of the source code repository (e.g., your GitHub username or organization).
  GitHubRepo:
    Type: String
    Description: The name of the source code repository.
  GitHubBranch:
    Type: String
    Default: main
    Description: The branch to use for deployments.

Resources:
  # --- S3 Bucket to store pipeline artifacts ---
  ArtifactBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "flexibuy-cicd-artifacts-${AWS::AccountId}-${AWS::Region}"

  # --- IAM Role for CodePipeline ---
  CodePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - "s3:*"
                  - "codebuild:StartBuild"
                  - "cloudformation:*"
                  - "iam:PassRole"
                Resource: "*"

  # --- IAM Role for CodeBuild ---
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodeBuildAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - "s3:*"
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: "*"

  # --- CodeBuild Project ---
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: public.ecr.aws/sam/build-python3.11:latest
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec.yml

  # --- The CI/CD Pipeline ---
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      RoleArn: !GetAtt CodePipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucket
      Stages:
        # --- STAGE 1: Source ---
        - Name: Source
          Actions:
            - Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: '1'
                Provider: CodeStarSourceConnection
              Configuration:
                ConnectionArn: !Sub "arn:aws:codestar-connections:${AWS::Region}:${AWS::AccountId}:connection/YOUR_CONNECTION_ID" # IMPORTANT: Replace with your connection ARN
                FullRepositoryId: !Sub "${GitHubOwner}/${GitHubRepo}"
                BranchName: !Ref GitHubBranch
              OutputArtifacts:
                - Name: SourceArtifact
              RunOrder: 1

        # --- STAGE 2: Build ---
        - Name: Build
          Actions:
            - Name: BuildAction
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: '1'
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref CodeBuildProject
                EnvironmentVariables: !Sub |
                  [
                    {"name": "ARTIFACT_BUCKET", "value": "${ArtifactBucket}", "type": "PLAINTEXT"}
                  ]
              InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts:
                - Name: BuildArtifact
              RunOrder: 1

        # --- STAGE 3: Deploy to Dev ---
        - Name: Deploy-Dev
          Actions:
            - Name: DeployAction
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: '1'
                Provider: CloudFormation
              Configuration:
                ActionMode: CREATE_UPDATE_STACK
                StackName: "finpay-dev"
                Capabilities: CAPABILITY_IAM
                RoleArn: !GetAtt CodePipelineRole.Arn
                TemplatePath: "BuildArtifact::packaged-template.yaml"
              InputArtifacts:
                - Name: BuildArtifact
              RunOrder: 1

        # --- STAGE 4: Deploy to QA (with Manual Approval) ---
        - Name: Deploy-QA
          Actions:
            - Name: ManualApproval
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Version: '1'
                Provider: Manual
              RunOrder: 1
            - Name: DeployAction
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: '1'
                Provider: CloudFormation
              Configuration:
                ActionMode: CREATE_UPDATE_STACK
                StackName: "finpay-qa"
                Capabilities: CAPABILITY_IAM
                RoleArn: !GetAtt CodePipelineRole.Arn
                TemplatePath: "BuildArtifact::packaged-template.yaml"
              InputArtifacts:
                - Name: BuildArtifact
              RunOrder: 2

        # --- STAGE 5: Deploy to Prod (with Manual Approval) ---
        - Name: Deploy-Prod
          Actions:
            - Name: ManualApproval
              ActionTypeId:
                Category: Approval
                Owner: AWS
                Version: '1'
                Provider: Manual
              RunOrder: 1
            - Name: DeployAction
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: '1'
                Provider: CloudFormation
              Configuration:
                ActionMode: CREATE_UPDATE_STACK
                StackName: "finpay-prod"
                Capabilities: CAPABILITY_IAM
                RoleArn: !GetAtt CodePipelineRole.Arn
                TemplatePath: "BuildArtifact::packaged-template.yaml"
              InputArtifacts:
                - Name: BuildArtifact
              RunOrder: 2