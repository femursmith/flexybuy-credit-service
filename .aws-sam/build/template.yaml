AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'FinPay Credit Service: A serverless application for dynamic credit limit
  management. This template defines the complete infrastructure for an environment,
  using the stack name (e.g., ''finpay-dev'') to derive resource names.

  '
Resources:
  HttpApi:
    Type: AWS::Serverless::HttpApi
  S3UploadQueue:
    Type: AWS::SQS::Queue
    Properties:
      VisibilityTimeout: 90
      QueueName:
        Fn::Sub: ${AWS::StackName}-uploads-queue
      RedrivePolicy:
        deadLetterTargetArn:
          Fn::GetAtt:
          - S3UploadDLQ
          - Arn
        maxReceiveCount: 3
  S3UploadQueuePolicy:
    Type: AWS::SQS::QueuePolicy
    Properties:
      Queues:
      - Ref: S3UploadQueue
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal: '*'
          Action: sqs:SendMessage
          Resource:
            Fn::GetAtt:
            - S3UploadQueue
            - Arn
          Condition:
            ArnEquals:
              aws:SourceArn:
                Fn::Sub: arn:aws:s3:::${AWS::StackName}-documents-uploads-bucket
  S3UploadDLQ:
    Type: AWS::SQS::Queue
    Properties:
      QueueName:
        Fn::Sub: ${AWS::StackName}-uploads-dlq
  StatementUploadsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Fn::Sub: ${AWS::StackName}-documents-uploads-bucket
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      NotificationConfiguration:
        QueueConfigurations:
        - Event: s3:ObjectCreated:*
          Queue:
            Fn::GetAtt:
            - S3UploadQueue
            - Arn
  MetricAnalyzerFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Fn::Sub: ${AWS::StackName}-metric-analyzer-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
      - PolicyName: S3ReadWriteToProcessedBucket
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Sid: AllowReadProcessedBucket
            Effect: Allow
            Action: s3:GetObject
            Resource:
              Fn::Sub: arn:aws:s3:::${AWS::StackName}-documents-processed-bucket/*
          - Sid: AllowWriteProcessedBucket
            Effect: Allow
            Action: s3:PutObject
            Resource:
              Fn::Sub: arn:aws:s3:::${AWS::StackName}-documents-processed-bucket/*
      - PolicyName: DynamoDBReadWriteCreditLimitTable
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Sid: AllowReadCreditLimitTable
            Effect: Allow
            Action:
            - dynamodb:GetItem
            - dynamodb:Query
            - dynamodb:Scan
            Resource:
              Fn::Sub: arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${AWS::StackName}-credit-profile-table
          - Sid: AllowWriteCreditLimitTable
            Effect: Allow
            Action:
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:BatchWriteItem
            Resource:
              Fn::Sub: arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${AWS::StackName}-credit-profile-table
  CsvDestinationBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName:
        Fn::Sub: ${AWS::StackName}-documents-processed-bucket
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
  CreditProfileTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName:
        Fn::Sub: ${AWS::StackName}-credit-profile-table
      AttributeDefinitions:
      - AttributeName: userId
        AttributeType: S
      KeySchema:
      - AttributeName: userId
        KeyType: HASH
      BillingMode: PAY_PER_REQUEST
      StreamSpecification:
        StreamViewType: NEW_IMAGE
  CreditLimitTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName:
        Fn::Sub: ${AWS::StackName}-credit-limit-table
      AttributeDefinitions:
      - AttributeName: userId
        AttributeType: S
      KeySchema:
      - AttributeName: userId
        KeyType: HASH
      BillingMode: PAY_PER_REQUEST
  ErrorNotificationTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName:
        Fn::Sub: ${AWS::StackName}-error-notification-topic
  ScoreUpdateTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName:
        Fn::Sub: ${AWS::StackName}-score-update-topic
  PdfToCsvConverterFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Fn::Sub: ${AWS::StackName}-pdf-converter-lambda
      CodeUri: ..\..\pdf_converter
      Handler: app.lambda_handler
      Runtime: python3.11
      MemorySize: 2048
      Timeout: 90
      Layers:
      - arn:aws:lambda:us-east-1:770693421928:layer:Klayers-p311-PyMuPDF:10
      Policies:
      - AWSLambdaBasicExecutionRole
      - S3ReadPolicy:
          BucketName:
            Ref: StatementUploadsBucket
      - S3WritePolicy:
          BucketName:
            Ref: CsvDestinationBucket
      Events:
        SqsTrigger:
          Type: SQS
          Properties:
            Queue:
              Fn::GetAtt:
              - S3UploadQueue
              - Arn
            BatchSize: 1
      Environment:
        Variables:
          CSV_DESTINATION_BUCKET:
            Ref: CsvDestinationBucket
  MetricAnalyzerFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Fn::Sub: ${AWS::StackName}-metric-analyzer-lambda
      CodeUri: ..\..\metric_analyzer
      Handler: app.lambda_handler
      Runtime: python3.11
      MemorySize: 256
      Timeout: 30
      Role:
        Fn::GetAtt:
        - MetricAnalyzerFunctionRole
        - Arn
      Events:
        CsvUploadTrigger:
          Type: S3
          Properties:
            Bucket:
              Ref: CsvDestinationBucket
            Events: s3:ObjectCreated:*
            Filter:
              S3Key:
                Rules:
                - Name: suffix
                  Value: .csv
      Environment:
        Variables:
          CREDIT_PROFILE_TABLE:
            Ref: CreditProfileTable
  CreditLimitEngineFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Fn::Sub: ${AWS::StackName}-credit-engine-lambda
      CodeUri: CreditLimitEngineFunction
      Handler: app.lambda_handler
      Runtime: python3.11
      MemorySize: 2048
      Timeout: 90
      Layers:
      - Ref: CreditLimitEngineLayers
      Policies:
      - AWSLambdaBasicExecutionRole
      - DynamoDBStreamReadPolicy:
          TableName:
            Ref: CreditProfileTable
          StreamName:
            Fn::GetAtt:
            - CreditProfileTable
            - StreamArn
      - DynamoDBWritePolicy:
          TableName:
            Ref: CreditLimitTable
      - SNSPublishMessagePolicy:
          TopicName:
            Fn::GetAtt:
            - ScoreUpdateTopic
            - TopicName
      Environment:
        Variables:
          CREDIT_PROFILE_TABLE:
            Ref: CreditProfileTable
          CREDIT_LIMIT_TABLE:
            Ref: CreditLimitTable
          SCORE_UPDATE_TOPIC_ARN:
            Ref: ScoreUpdateTopic
      Events:
        ProfileUpdateTrigger:
          Type: DynamoDB
          Properties:
            Stream:
              Fn::GetAtt:
              - CreditProfileTable
              - StreamArn
            StartingPosition: LATEST
            BatchSize: 10
    Metadata:
      SamResourceId: CreditLimitEngineFunction
  CreditLimitEngineLayers:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName:
        Fn::Sub: ${AWS::StackName}-credit-limit-engine-layers
      Description: Layer for Credit Limit Engine dependencies
      ContentUri: ..\..\dependencies\credit_limit_engine
      CompatibleRuntimes:
      - python3.11
      LicenseInfo: MIT
      RetentionPolicy: Retain
  ProfileUpdateFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Fn::Sub: ${AWS::StackName}-profile-update-lambda
      CodeUri: ..\..\profile_update
      Handler: app.lambda_handler
      Runtime: python3.11
      MemorySize: 256
      Timeout: 30
      Policies:
      - AWSLambdaBasicExecutionRole
      - DynamoDBWritePolicy:
          TableName:
            Ref: CreditProfileTable
      Events:
        ProfileApi:
          Type: HttpApi
          Properties:
            Path: /profile
            Method: post
            ApiId:
              Ref: HttpApi
        KycApi:
          Type: HttpApi
          Properties:
            Path: /kyc_answers
            Method: post
            ApiId:
              Ref: HttpApi
        FinActivityApi:
          Type: HttpApi
          Properties:
            Path: /fin_activity
            Method: post
            ApiId:
              Ref: HttpApi
      Environment:
        Variables:
          CREDIT_PROFILE_TABLE:
            Ref: CreditProfileTable
  CreditLimitGetFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Fn::Sub: ${AWS::StackName}-limit-get-lambda
      CodeUri: ..\..\limit_get
      Handler: app.lambda_handler
      Runtime: python3.11
      MemorySize: 256
      Timeout: 30
      Policies:
      - AWSLambdaBasicExecutionRole
      - DynamoDBReadPolicy:
          TableName:
            Ref: CreditLimitTable
      Events:
        ApiEvent:
          Type: HttpApi
          Properties:
            Path: /limit/{userId}
            Method: get
            ApiId:
              Ref: HttpApi
      Environment:
        Variables:
          DYNAMODB_TABLE:
            Ref: CreditLimitTable
  ErrorHandlingFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Fn::Sub: ${AWS::StackName}-error-handler-lambda
      CodeUri: ..\..\error_handler
      Handler: app.lambda_handler
      Runtime: python3.11
      MemorySize: 256
      Timeout: 30
      Policies:
      - AWSLambdaBasicExecutionRole
      - SNSPublishMessagePolicy:
          TopicName:
            Fn::GetAtt:
            - ErrorNotificationTopic
            - TopicName
      Events:
        SqsTrigger:
          Type: SQS
          Properties:
            Queue:
              Fn::GetAtt:
              - S3UploadDLQ
              - Arn
            BatchSize: 1
Outputs:
  ApiEndpoint:
    Description: API Gateway endpoint URL for the service
    Value:
      Fn::Sub: https://${HttpApi}.execute-api.${AWS::Region}.amazonaws.com
  StatementUploadsBucketName:
    Description: Name of the S3 bucket for initial statement uploads
    Value:
      Ref: StatementUploadsBucket
  CsvDestinationBucketName:
    Description: Name of the S3 bucket for processed CSV statements
    Value:
      Ref: CsvDestinationBucket
  CreditProfileTableName:
    Description: Name of the DynamoDB table for user credit profiles
    Value:
      Ref: CreditProfileTable
  CreditLimitTableName:
    Description: Name of the DynamoDB table for user credit limits
    Value:
      Ref: CreditLimitTable
  S3UploadQueueUrl:
    Description: URL of the SQS queue for S3 upload events
    Value:
      Ref: S3UploadQueue
  S3UploadDLQUrl:
    Description: URL of the SQS dead-letter queue for S3 upload events
    Value:
      Ref: S3UploadDLQ
  ErrorNotificationTopicArn:
    Description: ARN of the SNS topic for error notifications
    Value:
      Ref: ErrorNotificationTopic
  ScoreUpdateTopicArn:
    Description: ARN of the SNS topic for score update notifications
    Value:
      Ref: ScoreUpdateTopic
  PdfToCsvConverterFunctionArn:
    Description: ARN of the PDF to CSV Converter Lambda function
    Value:
      Fn::GetAtt:
      - PdfToCsvConverterFunction
      - Arn
  MetricAnalyzerFunctionArn:
    Description: ARN of the Metric Analyzer Lambda function
    Value:
      Fn::GetAtt:
      - MetricAnalyzerFunction
      - Arn
  CreditLimitEngineFunctionArn:
    Description: ARN of the Credit Limit Engine Lambda function
    Value:
      Fn::GetAtt:
      - CreditLimitEngineFunction
      - Arn
  ProfileUpdateFunctionArn:
    Description: ARN of the Profile Update Lambda function
    Value:
      Fn::GetAtt:
      - ProfileUpdateFunction
      - Arn
  CreditLimitGetFunctionArn:
    Description: ARN of the Credit Score Get Lambda function
    Value:
      Fn::GetAtt:
      - CreditLimitGetFunction
      - Arn
  ErrorHandlingFunctionArn:
    Description: ARN of the Error Handling Lambda function
    Value:
      Fn::GetAtt:
      - ErrorHandlingFunction
      - Arn
